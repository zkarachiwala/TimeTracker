@page "/login"
@inject IAuthService AuthService

<div class="lg:px-32">
    <h3>Login</h3>

    <EditForm Model="loginRequest" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator />
        <MyInputText Label="Name" Id="name" @bind-Value="loginRequest.UserName"
            ValidationFor="() => loginRequest.UserName" />
        <MyInputText Label="Password" Id="password" @bind-Value="loginRequest.Password"
            ValidationFor="() => loginRequest.Password" Type="password" />

        <MyButton Text="Login" Type="submit" AddMarginTop/>
    </EditForm>
</div>
@if(loginFailed)
{
    <div>
        <span class="text-xs text-red-600 font-bold my-1">@errorMessage</span>
    </div>
}

@code {
    LoginRequest loginRequest = new LoginRequest();
    bool loginFailed = false;
    string errorMessage = string.Empty;

    async Task HandleSubmit()
    {
        loginFailed = false;
        var response = await AuthService.Login(loginRequest);
        if (!response.IsSuccessful && response.Error is not null)
        {
            errorMessage = response.Error;
            loginFailed = true;
        }
        else if(!response.IsSuccessful)
        {
            errorMessage = "An unexpected error occured.";
            loginFailed = true;
        }
    }
}