<button type="@Type" @onclick="OnClick" class="@Css">
    @Text
</button>

@code {
    private const string PrimaryCss = "block rounded-md bg-teal-600 px-5 py-2.5 text-sm font-medium text-white transition hover:bg-teal-700";
    private const string SecondaryCss = "block rounded-md bg-gray-100 px-5 py-2.5 text-sm font-medium text-teal-600 transition hover:text-gray-600/75 sm:block";
    private const string DangerCss = "block rounded-md bg-red-600 px-5 py-2.5 text-sm font-medium text-white transition hover:text-red-700 sm:block";
    private const string MarginTopCss = "mt-2";

    [Parameter]
    public string? Type { get; set; } = "button";
    [Parameter]
    public string Text { get; set; } = string.Empty;
    [Parameter]
    public EventCallback OnClick { get; set; }
    [Parameter]
    public bool AddMarginTop { get; set; } = false;
    [Parameter]
    public ButtonLevel Level { get; set; } = ButtonLevel.Primary;

    private string Css { get; set; } = string.Empty;

    protected override void OnParametersSet()
    {
        Css = Level switch
        {
            ButtonLevel.Primary => PrimaryCss,
            ButtonLevel.Secondary => SecondaryCss,
            ButtonLevel.Danger => DangerCss,
            _ => PrimaryCss
        };

        if(AddMarginTop)
        {
            Css = $"{Css} {MarginTopCss}";
        }
    }

        public enum ButtonLevel
    {
        Primary,
        Secondary,
        Danger
    }
}